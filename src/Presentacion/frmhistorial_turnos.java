/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Datos.vconsulta_seguimiento;
import Datos.vpacientes;
import Datos.vreserva;
import Logica.StyloTabla;
import Logica.fconsulta;
import Logica.fpacientes;
import Logica.freserva;
import static Presentacion.frmventas.x;

import java.awt.Color;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jose Ayala
 */
public class frmhistorial_turnos extends javax.swing.JInternalFrame {

    public static String x;

    public frmhistorial_turnos() {

        initComponents();

        centrar_frm();

//        inhabilitar();
        jPanel1.setBackground(new Color(0, 102, 100, 200));

        StyloTabla st = new StyloTabla();

//        ocultar_columnas();
    }
    private String accion = "guardar";

    void centrar_frm() {

        //codigo para centrar internalframe
        x = "x";
        int a = frmprincipal.jDesktopPane2.getWidth() - this.getWidth();
        int b = frmprincipal.jDesktopPane2.getHeight() - this.getHeight();
        setLocation(a / 2, b / 2);
        setVisible(true);

    }

    void ocultar_columnas() {
        tablalistado.getColumnModel().getColumn(0).setMaxWidth(0);
        tablalistado.getColumnModel().getColumn(0).setMinWidth(0);
        tablalistado.getColumnModel().getColumn(0).setPreferredWidth(0);

        tablalistado.getColumnModel().getColumn(2).setMaxWidth(0);
        tablalistado.getColumnModel().getColumn(2).setMinWidth(0);
        tablalistado.getColumnModel().getColumn(2).setPreferredWidth(0);

        tablalistado.getColumnModel().getColumn(3).setMaxWidth(0);
        tablalistado.getColumnModel().getColumn(3).setMinWidth(0);
        tablalistado.getColumnModel().getColumn(3).setPreferredWidth(0);

    }

    int numero = 0;
    //funcion para aumentar turno

    void restar_turno() {
        if (numero <= 1) {
//      
            JOptionPane.showMessageDialog(rootPane, "No puede haber turnos menores a 1");

        } else {
            numero = numero - 1;
            txtturno.setText(String.format("" + numero));
        }

    }

    void sumar_turno() {
        if (numero >= 15) {
//      
            JOptionPane.showMessageDialog(rootPane, "LÃ­mites de turnos alcanzado");

        } else {
            numero = numero + 1;
            txtturno.setText(String.format("" + numero));
        }

    }

    //funcion para mostrar turnos activos
    public void mostrar_activos(String buscar) {
        try {
            DefaultTableModel modelo;
            for (int c = 0; c < tablalistado.getColumnCount(); c++) {

                Class<?> col_class = tablalistado.getColumnClass(c);

                tablalistado.setDefaultEditor(col_class, null); // remove editor

            }
            //De declara un objeto del tipo DefoutableModel llamdo "modelo"
            fconsulta func = new fconsulta();
            modelo = func.mostrar_turno(buscar);
            //Se llama al metodo mostrar de fPais que contiene el modelo de la tabla
            tablalistado.setModel(modelo);
            lbltotalregistros.setText("Total Registro " + func.totalRegistro);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    //funcion para mostrar turnos inactivos
    public void mostrar_inactivos(String buscar) {
        try {
            DefaultTableModel modelo;
            for (int c = 0; c < tablalistado.getColumnCount(); c++) {

                Class<?> col_class = tablalistado.getColumnClass(c);

                tablalistado.setDefaultEditor(col_class, null); // remove editor

            }
            //De declara un objeto del tipo DefoutableModel llamdo "modelo"
            fconsulta func = new fconsulta();
            modelo = func.mostrar_turno(buscar);
            //Se llama al metodo mostrar de fPais que contiene el modelo de la tabla
            tablalistado.setModel(modelo);
            lbltotalregistros.setText("Total Registro " + func.totalRegistro);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtturno = new javax.swing.JTextField();
        lbltotalregistros = new javax.swing.JLabel();
        btnnuevo = new javax.swing.JButton();
        btnguardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablalistado = new javax.swing.JTable();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Turnos");

        txtturno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtturnoActionPerformed(evt);
            }
        });
        txtturno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtturnoKeyReleased(evt);
            }
        });

        lbltotalregistros.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbltotalregistros.setText("REGISTROS");

        btnnuevo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnnuevo.setText("Anterior");
        btnnuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnnuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnnuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnuevoActionPerformed(evt);
            }
        });

        btnguardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnguardar.setText("Siguiente");
        btnguardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnguardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        tablalistado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tablalistado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablalistado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablalistadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablalistado);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)
                        .addComponent(txtturno, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbltotalregistros, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                .addComponent(btnnuevo)
                .addGap(137, 137, 137)
                .addComponent(btnguardar)
                .addGap(180, 180, 180)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(164, 164, 164))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtturno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(lbltotalregistros, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnguardar)))))
                    .addComponent(btnnuevo))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        x = null;
    }//GEN-LAST:event_formInternalFrameClosing
public static void NroFctura() {

        freserva funcion = new freserva();

        int NroFactura = funcion.fecha_menor();//llamamos la funcion nrofactura
        System.out.println(NroFactura);

    }
    private void btnnuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnuevoActionPerformed
NroFctura();
//        freserva func = new freserva();
//        vreserva dts = new vreserva();
//        for (int i = 0; i < tablalistado.getRowCount(); i++) {
//
//            dts.setFechaconsulta((tablalistado.getValueAt(i, 4).toString()));
//            System.out.println(i);

//
//            int a, m, d, a1, d1, m1, hora, minuto, segundo;
//            Calendar mifecha = new GregorianCalendar();
//            a1 = mifecha.get(Calendar.YEAR);
//            d1 = mifecha.get(Calendar.DAY_OF_MONTH);
//            m1 = mifecha.get(Calendar.MONTH) + 1;
////        hora = mifecha.get(Calendar.HOUR_OF_DAY);
////        minuto = mifecha.get(Calendar.MINUTE);
////        segundo = mifecha.get(Calendar.SECOND);
////        System.out.println("dia " + d1 + " mes " + m1 + " aÃ±o " + a1+ " hora " + hora+ ":"+ minuto + ":" + segundo);
//            Calendar cal;
//
//            cal = tablalistado.getValueAt(i, 4);
//            d = cal.get(Calendar.DAY_OF_MONTH);
//            m = cal.get(Calendar.MONTH) + 1;
//            a = cal.get(Calendar.YEAR);
//            System.out.println("dia " + d + " mes " + m + " aÃ±o " + a);
//            if ((a == a1) && (d == d1) && (m == m1)) {
//                JOptionPane.showMessageDialog(rootPane, "la fecha es igual");
//            } else {
//                if (((a < a1) || (m < m1)) && (d < d1)) {
//                    JOptionPane.showConfirmDialog(rootPane, "La fecha es menor");
//                }
//            }
//        }
//
//        mostrar_activos(txtturno.getText());
//        restar_turno();
//        mostrar("");

    }//GEN-LAST:event_btnnuevoActionPerformed

    private void txtturnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtturnoActionPerformed

        mostrar_activos(txtturno.getText());

    }//GEN-LAST:event_txtturnoActionPerformed

    private void txtturnoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtturnoKeyReleased

        mostrar_activos(txtturno.getText());

    }//GEN-LAST:event_txtturnoKeyReleased

    private void tablalistadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablalistadoMouseClicked

    }//GEN-LAST:event_tablalistadoMouseClicked
public static void nromayor() {

        freserva funcion = new freserva();

        int nromayor = funcion.fecha_mayor();//llamamos la funcion fecha mayor
        System.out.println(nromayor);

    }
    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
nromayor();
//        sumar_turno();
//
//        mostrar_activos(txtturno.getText());
//
//        freserva func = new freserva();
//        vreserva dts = new vreserva();
//        for (int i = 0; i < tablalistado.getRowCount(); i++) {
//
//            dts.setIdpaciente(Integer.parseInt(tablalistado.getValueAt(i, 0).toString()));
//            dts.setIdusuarios(Integer.parseInt(tablalistado.getValueAt(i, 2).toString()));
//            dts.setIdreserva(Integer.parseInt(tablalistado.getValueAt(i, 3).toString()));
//   
//            dts.setEstado((tablalistado.getValueAt(i, 8).toString()));
           

//            cod = tablalistado.getValueAt(fila, 4).toString();
//            jDateChooser1.setDate(fechaDate);
//            valor= tablalistado.getValueAt(fila, 1)+" "+tablalistado.getValueAt(fila, 2).toString();

//            func.editar(dts);
//            JOptionPane.showMessageDialog(rootPane, "La Reserva fue Editada satisfactoriamente");
            //            mostrar("");

//        }

        //    fconsulta func = new fconsulta();
        //        vconsulta_seguimiento dts = new vconsulta_seguimiento();
        //
        ////        observacion, fecha_prox,"
        ////                + " idreserva, peso_inicial, recomendaciones, estado, idusuarios
        //         dts.setIdreserva(Integer.parseInt(txtidreserva.getText()));
        //
        //
        //        dts.setIdusuarios(Integer.parseInt(usuario.getText()));
        //        dts.setPeso_inicial(Integer.parseInt(txtpeso_ini.getText()));
        //        dts.setObservacion(txtprogresos.getText());
        //
        //        Calendar cal;
        //        int d, m, a;
        //        cal = dtproxima.getCalendar();
        //        d = cal.get(Calendar.DAY_OF_MONTH);
        //        m = cal.get(Calendar.MONTH);
        //        a = cal.get(Calendar.YEAR) - 1900;
        //        dts.setFecha_prox(new Date(a, m, d));
        //
        //
        //        dts.setRecomendaciones(txtrecomendaciones.getText());
        //
        //        if (accion.equals("guardar")) {
        //            if (func.insertar_consulta(dts)) {
        //                JOptionPane.showMessageDialog(rootPane, "La reserva fue Registrada satisfactoriamente");
        //                mostrar("");
        ////                inhabilitar();
        //
        //            }
        //
        //        } else if (accion.equals("editar")) {
        //            dts.setIdconsulta(Integer.parseInt(txtidconsulta.getText()));
        //            dts.setIdreserva(Integer.parseInt(txtidreserva.getText()));
        //            if (func.editar(dts)) {
        //                JOptionPane.showMessageDialog(rootPane, "La Reserva fue Editada satisfactoriamente");
        //                mostrar("");
        ////                inhabilitar();
        //            }
        //        }
        //        pst.setInt(1, dts.getIdconsulta());
        //            pst.setDate(2, dts.getFecha_prox());
        //            pst.setInt(3, dts.getIdpaciente());
        //            pst.setInt(4, dts.getIdreserva());
        //            pst.setInt(5, dts.getPeso_inicial());
        //            pst.setString(6,dts.getRecomendaciones());
        //            pst.setString(7,"ATENDIDO");
        //            pst.setInt(8,dts.getIdusuarios());
        //        fconsulta func = new fconsulta();
        //        vconsulta_seguimiento dts = new vconsulta_seguimiento();
        //
        //        //  dts.setIdreserva(Integer.parseInt(txtidreserva.getText()));
        //        dts.setIdconsulta(Integer.parseInt(txtidreserva.getText()));
        //        dts.setIdpaciente(Integer.parseInt(paciente.getText()));
        //        dts.setIdpaciente(Integer.parseInt(usuario.getText()));
        //        dts.setPeso_inicial(Integer.parseInt(txtpeso_ini.getText()));
        //        dts.setObservacion(txtprogresos.getText());
        //
        //        Calendar cal;
        //        int d, m, a;
        //        cal = dtproxima.getCalendar();
        //        d = cal.get(Calendar.DAY_OF_MONTH);
        //        m = cal.get(Calendar.MONTH);
        //        a = cal.get(Calendar.YEAR) - 1900;
        //        dts.setFecha_prox(new Date(a, m, d));
        //
        //
        //        dts.setRecomendaciones(txtrecomendaciones.getText());
        //
        //        if (accion.equals("guardar")) {
        //            if (func.insertar_consulta(dts)) {
        //                JOptionPane.showMessageDialog(rootPane, "La reserva fue Registrada satisfactoriamente");
        //                mostrar("");
        //                inhabilitar();
        //
        //            }
        //
        //        } else if (accion.equals("editar")) {
        //            dts.setIdconsulta(Integer.parseInt(txtidreserva.getText()));
        ////            dts.setIdusuarios(Integer.parseInt(txtidprofecional.getText()));
        //            if (func.insertar_consulta(dts)) {
        //                JOptionPane.showMessageDialog(rootPane, "La Reserva fue Editada satisfactoriamente");
        //                mostrar("");
        ////                inhabilitar();
        //            }
        //        }
    }//GEN-LAST:event_btnguardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmhistorial_turnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmhistorial_turnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmhistorial_turnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmhistorial_turnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmhistorial_turnos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton btnnuevo;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbltotalregistros;
    private javax.swing.JTable tablalistado;
    private javax.swing.JTextField txtturno;
    // End of variables declaration//GEN-END:variables
}
